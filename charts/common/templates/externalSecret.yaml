{{- $fullName := include "common.fullname" . -}}
{{ $externalSecrets := default dict .Values.externalSecrets }}
{{- range $k, $v := .Values.env }}
---
{{- if or (eq $v.type "parameterStore") (eq $v.type "secretsManager") }}
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: "{{ $fullName }}-{{ $v.name }}"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  refreshInterval: 1m
  secretStoreRef:
    kind: ClusterSecretStore
    name: {{ if eq $v.type "secretsManager" }}{{ $externalSecrets.secretsManagerClusterSecretStoreName | default (printf "%s-secrets-manager" $externalSecrets.clusterSecretStoreName) }}{{ else }}{{ $externalSecrets.clusterSecretStoreName }}{{ end }}
  data:
    - secretKey: "{{ $fullName }}-{{ $v.name }}"
      remoteRef:
        key: {{ if eq $v.type "secretsManager" }}{{ $v.secret_name }}{{ else }}{{ $v.parameter_name }}{{ end }}
{{- end }}
{{- end }}
